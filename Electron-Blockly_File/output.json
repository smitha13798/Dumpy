[
    {
        "scope": "global",
        "functions": [
            {
                "functionName": "test",
                "parameters": "()",
                "functionCalls": [
                    {
                        "function": "Dense",
                        "parameters": "(feature=32, bias=True)",
                        "assigned": "x",
                        "index": 7
                    },
                    {
                        "function": "gelu",
                        "parameters": "(3)",
                        "assigned": "",
                        "index": 8
                    },
                    {
                        "function": "relu",
                        "parameters": "(x)",
                        "assigned": "x",
                        "index": 9
                    },
                    {
                        "function": "relu",
                        "parameters": "(x)",
                        "assigned": "x",
                        "index": 10
                    }
                ],
                "scope": "",
                "row": "5",
                "translate": true,
                "returns": {
                    "has_return": true,
                    "return_value": null
                },
                "start_byte": 37,
                "end_byte": 163
            }
        ],
        "translate": true
    },
    {
        "scope": "CNN",
        "functions": [
            {
                "functionName": "__call__",
                "parameters": "(self, x)",
                "functionCalls": [
                    {
                        "function": "Conv",
                        "parameters": "(features=32, kernel_size=(3, 3))(x)",
                        "assigned": "x",
                        "index": 22
                    },
                    {
                        "function": "Conv",
                        "parameters": "(features=32, kernel_size=(3, 3))",
                        "assigned": "x",
                        "index": 22
                    },
                    {
                        "function": "relu",
                        "parameters": "(x)",
                        "assigned": "x",
                        "index": 23
                    },
                    {
                        "function": "avg_pool",
                        "parameters": "(x, window_shape=(2, 2), strides=(2, 2))",
                        "assigned": "x",
                        "index": 24
                    },
                    {
                        "function": "Conv",
                        "parameters": "(features=64, kernel_size=(3, 3))(x)",
                        "assigned": "x",
                        "index": 25
                    },
                    {
                        "function": "Conv",
                        "parameters": "(features=64, kernel_size=(3, 3))",
                        "assigned": "x",
                        "index": 25
                    },
                    {
                        "function": "relu",
                        "parameters": "(x)",
                        "assigned": "x",
                        "index": 26
                    },
                    {
                        "function": "avg_pool",
                        "parameters": "(x, window_shape=(2, 2), strides=(2, 2))",
                        "assigned": "x",
                        "index": 27
                    },
                    {
                        "function": "reshape",
                        "parameters": "((x.shape[0], -1))",
                        "assigned": "x",
                        "index": 28
                    },
                    {
                        "function": "relu",
                        "parameters": "(x)",
                        "assigned": "x",
                        "index": 29
                    },
                    {
                        "function": "relu",
                        "parameters": "(y)",
                        "assigned": "x",
                        "index": 30
                    }
                ],
                "scope": "CNN",
                "row": "20",
                "translate": true,
                "returns": {
                    "has_return": true,
                    "return_value": null
                },
                "start_byte": 235,
                "end_byte": 628
            },
            {
                "functionName": "test",
                "parameters": "(a, b)",
                "functionCalls": [
                    {
                        "function": "Dense",
                        "parameters": "(feature=32, bias=True)",
                        "assigned": "x",
                        "index": 37
                    },
                    {
                        "function": "gelu",
                        "parameters": "(3)",
                        "assigned": "",
                        "index": 38
                    },
                    {
                        "function": "relu",
                        "parameters": "(x)",
                        "assigned": "x",
                        "index": 39
                    },
                    {
                        "function": "relu",
                        "parameters": "(x)",
                        "assigned": "x",
                        "index": 40
                    }
                ],
                "scope": "CNN",
                "row": "35",
                "translate": true,
                "returns": {
                    "has_return": true,
                    "return_value": null
                },
                "start_byte": 632,
                "end_byte": 777
            }
        ],
        "translate": true,
        "row_number": 16,
        "parameters": "",
        "base_classes": "(nn.Module)",
        "start_byte": 168,
        "end_byte": 777
    }
]